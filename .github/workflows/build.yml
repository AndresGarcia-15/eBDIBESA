name: Build and Deploy eBDIBESA

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: Configure Maven settings
      run: |
        mkdir -p ~/.m2
        cp .github/maven-settings.xml ~/.m2/settings.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Verify Maven configuration
      run: mvn help:effective-settings -P github-packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Check KernelBESA availability
      id: check-kernel
      run: |
        echo "Checking if KernelBESA is available in GitHub Packages..."
        if mvn dependency:resolve -P github-packages -B -q 2>/dev/null; then
          echo "kernel-available=true" >> $GITHUB_OUTPUT
          echo "‚úÖ KernelBESA found in GitHub Packages"
        else
          echo "kernel-available=false" >> $GITHUB_OUTPUT
          echo "‚ö†Ô∏è KernelBESA not found in GitHub Packages"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true
    
    - name: Clone and Build KernelBESA (if needed)
      if: steps.check-kernel.outputs.kernel-available == 'false'
      run: |
        echo "üì¶ Cloning KernelBESA for local build..."
        cd ..
        if [ ! -d "KernelBESA" ]; then
          git clone https://github.com/ISCOUTB/KernelBESA.git
        fi
        cd KernelBESA
        echo "üî® Building KernelBESA..."
        mvn clean install -B -q
        echo "‚úÖ KernelBESA built and installed locally"
        ls -la target/
    
    - name: Build with GitHub Packages
      if: steps.check-kernel.outputs.kernel-available == 'true'
      run: |
        echo "üî® Building with github-packages profile..."
        mvn clean compile package -P github-packages -B
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build with Local Dependencies
      if: steps.check-kernel.outputs.kernel-available == 'false'
      run: |
        echo "üî® Building with local-dev profile..."
        mvn clean compile package -P local-dev -B
    
    - name: Run tests
      run: |
        echo "üß™ Running tests..."
        if [ "${{ steps.check-kernel.outputs.kernel-available }}" == "true" ]; then
          mvn test -P github-packages -B
        else
          mvn test -P local-dev -B
        fi
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Verify build artifacts
      run: |
        echo "üì¶ Checking generated artifacts:"
        if [ -d "target" ]; then
          echo "Target directory contents:"
          ls -la target/
          echo ""
          if ls target/*.jar 1> /dev/null 2>&1; then
            echo "‚úÖ JAR files found:"
            ls -la target/*.jar
          else
            echo "‚ùå No JAR files found in target directory"
            exit 1
          fi
        else
          echo "‚ùå Target directory not found"
          exit 1
        fi
    
    - name: Deploy to GitHub Packages
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "üöÄ Deploying to GitHub Packages..."
        echo "üìã Deployment conditions:"
        echo "  - Branch: ${{ github.ref }}"
        echo "  - Event: ${{ github.event_name }}"
        echo "  - KernelBESA available: ${{ steps.check-kernel.outputs.kernel-available }}"
        
        if [ "${{ steps.check-kernel.outputs.kernel-available }}" == "true" ]; then
          echo "‚úÖ Using GitHub Packages profile for deploy..."
          mvn deploy -P github-packages -DskipTests -B
        else
          echo "‚ö†Ô∏è Using local-dev profile for deploy..."
          mvn deploy -P local-dev -DskipTests -B
        fi
        echo "‚úÖ Deploy successful"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Show Deploy Information
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "‚ÑπÔ∏è Deploy completed successfully"
        echo "üì¶ eBDIBESA 3.5 should now be available at:"
        echo "   https://maven.pkg.github.com/ISCOUTB/eBDIBESA"
        echo ""
        echo "üìù To use as dependency:"
        echo "   <dependency>"
        echo "     <groupId>io.github.iscoutb</groupId>"
        echo "     <artifactId>ebdi-besa</artifactId>"
        echo "     <version>3.5</version>"
        echo "   </dependency>"
